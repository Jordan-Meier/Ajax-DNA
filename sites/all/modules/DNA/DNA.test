<?php
class DNAUnitTestCase extends DrupalUnitTestCase
{
    public static function getInfo() {
        return array(
            'name' => 'DNA Unit Tests',
            'description' => 'Test that DNA module successfully produces second set of nucleotides based on the given first set. ',
            'group' => 'Epicodus Code Review Tests',
        );
    }

    function testDNA() {
        //English description
        $description = 'The opposite of a single nucleotide of DNA is successfully translated';

        //Arrange
        $input = 'A';

        //Act
        $result = find_DNA($input);

        //Assert
        $expected_output = 'T';
        $this->assertEqual($result, $expected_output, $description);

        $description = 'The opposite of two nucleotides of DNA are successfully translated';
        $input = 'AG';
        $result = find_DNA($input);
        $expected_output = 'TC';
        $this->assertEqual($result, $expected_output, $description);

        $description = 'The opposite of several nucleotides of DNA are successfully translated';
        $input = 'AGTC';
        $result = find_DNA($input);
        $expected_output = 'TCAG';
        $this->assertEqual($result, $expected_output, $description);
    }
}

class DNATestCase extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Functional Tests',
            'description' => 'Test that DNA module successfully produces second set of nucleotides based on the given first set. ',
            'group' => 'Epicodus Code Review Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('DNA'));
    }

    public function testDNACreate() {
        $edit = array();
        $edit['input'] = 'TAGCA';

        $this->drupalPost('/DNA', $edit, t('Complete Sequence'));
        $this->assertText(t('ATCGT'), t('Test passes! Hooray!'));
    }
}
